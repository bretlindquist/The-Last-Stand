import Cocoa

print("")
let charactersMap: [Character: [(x: Int, y: Int)]] = [
  "A": [(2,0), (1,1), (3,1), (0,2), (4,2), (0,3), (1,3), (2,3),(3,3), (4,3), (0,4), (4,4), (0,5), (4,5), (0,6), (4,6)],
  "B": [(0,0), (0,1), (0,2), (0,3), (0,4), (0,5), (0,6), (1,0), (1,3), (1,6), (2,0), (2,3), (2,6), (3,1), (3,2), (3,4), (3,5)],
  "C": [(1,0), (2,0), (3,0), (0,1), (0,2), (0,3), (0,4), (0,5), (1,6), (2,6), (3,6)],
  "D": [(0,0), (0,1), (0,2), (0,3), (0,4), (0,5), (0,6), (1,0), (1,6), (2,0), (2,6), (3,1), (3,2), (3,3), (3,4), (3,5)],
  "E": [(0,0), (0,1), (0,2), (0,3), (0,4), (0,5), (0,6), (1,0), (1,3), (1,6), (2,0), (2,3), (2,6), (3,0), (3,3), (3,6), (4,0), (4,3), (4,6)],
  "F": [(0,0), (0,1), (0,2), (0,3), (0,4), (0,5), (0,6), (1,0), (1,3), (2,0), (3,0)],
  "G": [(1,0), (2,0), (3,0), (0,1), (0,2), (0,3), (0,4), (0,5),(1,6), (3,3), (4,4),(4,3), (2,6), (3,6), (4,0), (4,5), (4,6)],
  "H": [(0,0), (0,1), (0,2), (0,3), (0,4), (0,5), (0,6), (2,3), (4,0), (4,1), (4,2), (4,3), (4,4), (4,5), (4,6)],
  "I": [(0,0), (1,0), (2,0), (3,0), (4,0), (2,1), (2,2), (2,3), (2,4), (2,5), (0,6), (1,6), (2,6), (3,6), (4,6)],
  "J": [(0,0), (1,0), (2,0), (3,0), (4,0), (4,1), (4,2), (4,3), (4,4), (2,5), (0,6), (1,6), (2,6), (3,6)],
  "K": [(0,0), (0,1), (0,2), (0,3), (0,4), (0,5), (0,6), (3,0), (2,1), (1,2), (2,3), (3,4), (4,5), (4,6)],
  "L": [(0,0), (0,1), (0,2), (0,3), (0,4), (0,5), (0,6), (1,6), (2,6), (3,6), (4,6)],
  "M": [(0,0), (0,1), (0,2), (0,3), (0,4), (0,5), (0,6), (4,0), (4,1), (4,2), (4,3), (4,4), (4,5), (4,6), (1,2), (2,3), (3,2)],
  "N": [(0,0), (0,1), (0,2), (0,3), (0,4), (0,5), (0,6), (4,0), (4,1), (4,2), (4,3), (4,4), (4,5), (4,6), (1,1), (2,2), (3,3)],
  "O": [(1,0), (2,0), (3,0), (0,1), (0,2), (0,3), (0,4), (0,5), (4,1), (4,2), (4,3), (4,4), (4,5), (1,6), (2,6), (3,6)],
  "P": [(0,0), (0,1), (0,2), (0,3), (0,4), (0,5), (0,6), (1,0), (2,0), (3,0), (3,1), (2,2), (1,2)],
  "Q": [(1,0), (2,0), (3,0), (0,1), (0,2), (0,3), (0,4), (4,1), (4,2), (4,3), (4,4), (3,5), (1,6), (2,6), (3,6), (4,5)],
  "R": [(0,0), (0,1), (0,2), (0,3), (0,4), (0,5), (0,6), (1,0), (2,0), (3,0), (3,1), (2,2), (1,2), (2,3), (3,4), (4,5), (4,6)],
  "S": [(1,0), (2,0), (3,0), (0,1), (0,2), (1,2), (2,2), (3,2), (4,3), (4,4), (0,5), (1,6), (2,6), (3,6), (1,5), (4,5)],
  "T": [(0,0), (1,0), (2,0), (3,0), (4,0), (2,1), (2,2), (2,3), (2,4), (2,5), (2,6)],
  "U": [(0,0), (0,1), (0,2), (0,3), (0,4), (0,5), (1,6), (2,6), (3,6), (4,0), (4,1), (4,2), (4,3), (4,4), (4,5)],
  "V": [(0,0), (0,1), (0,2), (0,3), (0,4), (1,5), (2,6), (3,5), (4,4), (4,3), (4,2), (4,1), (4,0)],
  "W": [(0,0), (0,1), (0,2), (0,3), (0,4), (0,5), (0,6), (4,0), (4,1), (4,2), (4,3), (4,4), (4,5), (4,6), (2,5), (2,6)],
  "X": [(0,0), (0,6), (1,1), (1,5), (2,2), (2,3), (2,4), (3,1), (3,5), (4,0), (4,6)],
  "Y": [(0,0), (0,1), (1,2), (2,3), (2,4), (2,5), (2,6), (1,2), (3,2), (4,1), (4,0)],
  "Z": [(0,0), (1,0), (2,0), (3,0), (4,0), (3,1), (2,2), (1,3), (0,4), (0,5), (1,5), (2,5), (3,5), (4,5), (4,6)],
  "#": [(0,0), (1,0), (2,0), (3,0), (4,0), (0,6), (1,6), (2,6), (3,6), (4,6), (0,1), (0,2), (0,3), (0,4), (0,5), (4,1), (4,2), (4,3), (4,4), (4,5)]

]


func printWordWithCoordinates(_ input: String) {
  let maxHeight = 7
  let characterWidth = 5
  let spaceBetweenCharacters = 5 // Adjusted to match character width for clearer separation
  var outputLines = Array(repeating: "", count: maxHeight)

  for character in input.uppercased() {
    if character == " " {
      // Add spaces for a space character
      for i in 0..<maxHeight {
        outputLines[i] += String(repeating: " ", count: spaceBetweenCharacters)
      }
    } else {
      // Process non-space characters
      guard let charCoordinates = charactersMap[character] else { continue }

      for y in 0..<maxHeight {
        var line = ""
        for x in 0..<characterWidth {
          let pixel = charCoordinates.contains(where: { $0.x == x && $0.y == y })
          line += pixel ? "#" : " "
        }
        outputLines[y] += line
      }
    }
    // Add a single space between characters or after a space
    for i in 0..<maxHeight {
      outputLines[i] += " "
    }
  }

  outputLines.forEach { print($0) }
}

// Example usage
printWordWithCoordinates("abcdefghijkl")
printWordWithCoordinates("mnopqrstuvwxyz")
let bigRows = 4

for i in 0...bigRows {
  let spaces = String(repeating: " ", count: bigRows-i)
  let boxes = String(repeating: "#", count: i)
  let divider = String(" ")
  let printOut = spaces + boxes + divider + boxes + spaces
  printWordWithCoordinates(printOut)

}
